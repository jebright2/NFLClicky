{"version":3,"sources":["components/FriendCard/FriendCard.js","components/Wrapper/Wrapper.js","components/Header/Header.js","App.js","index.js"],"names":["FriendCard","props","className","onClick","clickCount","id","alt","name","src","image","Wrapper","children","Header","score","highscore","App","state","friends","gameOver","setState","console","log","this","forEach","card","count","alert","find","f","i","sort","Math","random","map","key","Component","ReactDOM","render","document","getElementById"],"mappings":"qwDAYeA,MATf,SAAoBC,GAClB,OACE,yBAAKC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,WAAWH,EAAMI,MAC1D,yBAAKH,UAAU,iBACb,yBAAKI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,W,MCA1BC,MAJf,SAAiBT,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMU,WCQ1BC,G,MATA,SAAAX,GAAK,OAClB,yBAAKC,UAAU,UACb,yBAAKA,UAAU,SAASD,EAAMU,UAC9B,yBAAKT,UAAU,UACb,qCAAWD,EAAMY,MAAjB,eAAoCZ,EAAMa,e,OCuDjCC,E,2MAtDbC,MAAQ,CACNC,UACAJ,MAAO,EACPC,UAAW,G,EAGdI,SAAW,WAWT,OAVI,EAAKF,MAAMH,MAAQ,EAAKG,MAAMF,WAChC,EAAKK,SAAS,CAACL,UAAW,EAAKE,MAAMH,QAAQ,WAC3CO,QAAQC,IAAIC,KAAKN,MAAMF,cAG3B,EAAKE,MAAMC,QAAQM,SAAQ,SAAAC,GACzBA,EAAKC,MAAQ,KAEfC,MAAM,2DAAD,OAA4D,EAAKV,MAAMH,QAC5E,EAAKM,SAAS,CAACN,MAAO,KACf,G,EAGTT,WAAa,SAAAC,GACX,EAAKW,MAAMC,QAAQU,MAAK,SAACC,EAAGC,GAC1B,GAAID,EAAEvB,KAAOA,EAAI,CACf,GAAyB,IAArBY,EAAQY,GAAGJ,MAMb,OALAR,EAAQY,GAAGJ,MAAQR,EAAQY,GAAGJ,MAAQ,EACtC,EAAKN,SAAS,CAACN,MAAO,EAAKG,MAAMH,MAAQ,IAAI,WAC3CO,QAAQC,IAAIC,KAAKN,MAAMH,UAEzB,EAAKG,MAAMC,QAAQa,MAAM,kBAAMC,KAAKC,SAAW,OACxC,EAEP,EAAKd,gB,wEAMF,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAQL,MAAOS,KAAKN,MAAMH,MAAOC,UAAWQ,KAAKN,MAAMF,WAAvD,uCACCQ,KAAKN,MAAMC,QAAQgB,KAAI,SAAAT,GAAI,OAC1B,kBAAC,EAAD,CACEpB,WAAY,EAAKA,WACjBC,GAAImB,EAAKnB,GACT6B,IAAKV,EAAKnB,GACVI,MAAOe,EAAKf,gB,GAhDN0B,a,MCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.af538924.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction FriendCard(props) {\r\n  return (\r\n    <div className=\"card\" onClick={() => props.clickCount(props.id)}>\r\n      <div className=\"img-container\">\r\n        <img alt={props.name} src={props.image} />\r\n      </div>\r\n    </div>\r\n)};\r\n\r\nexport default FriendCard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Header = props => (\r\n  <div className=\"header\">\r\n    <div className=\"title\">{props.children}</div>\r\n    <div className=\"scores\">\r\n      <b>Score: {props.score} Highscore: {props.highscore}</b>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Header;","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends, \n    score: 0,\n    highscore: 0\n  };\n\n gameOver = () => {\n   if (this.state.score > this.state.highscore) {\n     this.setState({highscore: this.state.score}, function() {\n       console.log(this.state.highscore);\n     });\n   }\n   this.state.friends.forEach(card => {\n     card.count = 0;\n   });\n   alert(`Game Over! Select team logo to start the game. \\nscore: ${this.state.score}`);\n   this.setState({score: 0});\n   return true;\n }\n\n clickCount = id => {\n   this.state.friends.find((f, i) => {\n     if (f.id === id) {\n       if (friends[i].count === 0) {\n         friends[i].count = friends[i].count + 1;\n         this.setState({score: this.state.score + 1}, function() {\n           console.log(this.state.score);\n         });\n         this.state.friends.sort (() => Math.random() - 0.5)\n         return true;\n       } else {\n         this.gameOver();\n       }\n     }\n   });\n }\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Header score={this.state.score} highscore={this.state.highscore}>Clicky Game: Select each team once!</Header>\n        {this.state.friends.map(card => (\n          <FriendCard\n            clickCount={this.clickCount}\n            id={card.id}\n            key={card.id}\n            image={card.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}